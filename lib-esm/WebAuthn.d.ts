import { Config } from "./binder";
import TokenHandler from "./handler/TokenHandler";
import { Modal } from "./components/MicroModal";
declare class WebAuthn {
    static CANCELED: string;
    static SUCCESS: string;
    config: Config;
    loaded: boolean;
    cotterIframeID: string;
    containerID: string;
    cancelDivID: string;
    state: string | null;
    verifyError?: any;
    verifySuccess?: any;
    tokenHander?: TokenHandler;
    originalResponse?: any;
    displayedError?: string;
    activeModal?: Modal | null;
    constructor(config: Config, tokenHandler?: TokenHandler);
    init(): void;
    removeSelf(): void;
    onSuccess(data: any, status?: string): void;
    onError(error: any): void;
    onErrorDisplay(error: any): void;
    initEventHandler(): void;
    static sendPost(data: object, iframeID: string): void;
    loadIframe(): void;
    removeIframe(): void;
    show(): Promise<import("./binder").VerifySuccess>;
    cancel(): void;
    close(): void;
    startRegistration(): void;
    startLogin(): void;
    static available(): Promise<boolean>;
    beginRegistration(identifier: string, origin: string): Promise<any>;
    finishRegistration(credential: Credential, identifier: string, origin: string): Promise<any>;
    beginLogin(identifier: string, origin: string, publicKey: string): Promise<any>;
    finishLogin(credential: Credential, identifier: string, origin: string, publicKey: string): Promise<any>;
}
export default WebAuthn;
